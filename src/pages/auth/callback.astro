---
// OAuth callback page for Supabase
export const prerender = false
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Signing in...</title>
  <style>
    body {
      font-family: system-ui, -apple-system, sans-serif;
      background: #0a0a0a;
      color: #ffffff;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      margin: 0;
    }
    .container {
      text-align: center;
      padding: 2rem;
    }
    .spinner {
      width: 40px;
      height: 40px;
      border: 3px solid #333;
      border-top: 3px solid #00ffff;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 1rem;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="spinner"></div>
    <h2>Signing you in...</h2>
    <p>Please wait while we complete your authentication.</p>
  </div>

  <script>
    import { createClient } from '@supabase/supabase-js';
    
    const supabaseUrl = 'https://buykztztorzexijjtivj.supabase.co';
    const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1eWt6dHp0b3J6ZXhpamp0aXZqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU2NzQwMDAsImV4cCI6MjA1MTI1MDAwMH0.Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8Ej8';
    
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    
    // Handle the OAuth callback
    async function handleAuthCallback() {
      try {
        const { data, error } = await supabase.auth.getSession();
        
        if (error) {
          console.error('Auth error:', error);
          window.location.href = '/?error=auth_failed';
          return;
        }
        
        if (data.session) {
          console.log('Auth successful:', data.session.user);
          // Redirect to the intended page or home
          const urlParams = new URLSearchParams(window.location.search);
          const next = urlParams.get('next') || '/';
          window.location.href = next;
        } else {
          console.log('No session found');
          window.location.href = '/?error=no_session';
        }
      } catch (error) {
        console.error('Callback error:', error);
        window.location.href = '/?error=callback_failed';
      }
    }
    
    // Run the callback handler
    handleAuthCallback();
  </script>
</body>
</html>
