---
/**
 * ConsentManager.astro - Privacy-First Consent Management Component
 *
 * Provides GDPR/CCPA compliant consent management with granular controls.
 * Based on: specs/057-advanced-analytics-monitoring/research.md
 * Feature: 057-advanced-analytics-monitoring
 * Generated: 2025-09-17
 */

// Component imports
import type { ConsentLevel, GranularConsent } from '../../types/analytics';

// Props for the component
export interface Props {
  position?: 'bottom' | 'top' | 'center';
  theme?: 'dark' | 'light' | 'auto';
  showOnFirstVisit?: boolean;
  enableGranularControls?: boolean;
  compactMode?: boolean;
}

const {
  position = 'bottom',
  theme = 'auto',
  showOnFirstVisit = true,
  enableGranularControls = true,
  compactMode = false
} = Astro.props;

// Generate unique IDs for accessibility
const managerId = `consent-manager-${Math.random().toString(36).substr(2, 9)}`;
const bannerId = `consent-banner-${Math.random().toString(36).substr(2, 9)}`;
const settingsId = `consent-settings-${Math.random().toString(36).substr(2, 9)}`;
---

<!-- Consent Management Container -->
<div
  id={managerId}
  class="consent-manager"
  data-testid="consent-manager"
  data-position={position}
  data-theme={theme}
  role="region"
  aria-label="Privacy Consent Management"
>
  <!-- Consent Banner (Initial) -->
  <div
    id={bannerId}
    class="consent-banner"
    data-testid="consent-banner"
    role="dialog"
    aria-labelledby="consent-title"
    aria-describedby="consent-description"
    aria-modal="false"
    hidden
  >
    <div class="consent-banner-content">
      <!-- Banner Header -->
      <div class="consent-header">
        <div class="consent-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="3"></circle>
            <path d="M12 1v6m0 6v6"></path>
            <path d="m15.14 7.14-4.28 4.28m0-4.28 4.28 4.28"></path>
            <path d="M21 12h-6m-6 0H3"></path>
          </svg>
        </div>
        <h3 id="consent-title" class="consent-title">Privacy & Cookies</h3>
      </div>

      <!-- Banner Message -->
      <div id="consent-description" class="consent-description">
        {compactMode ? (
          <p>We use cookies to enhance your experience and analyze site usage. Choose your preferences or accept all.</p>
        ) : (
          <div>
            <p>We respect your privacy and are committed to protecting your personal data. This website uses cookies and similar technologies to provide you with a better experience.</p>
            <p>You can choose which categories of cookies you allow. Essential cookies are always enabled as they're required for the website to function properly.</p>
          </div>
        )}
      </div>

      <!-- Quick Actions (Compact Mode) -->
      {compactMode && (
        <div class="consent-quick-actions">
          <button
            type="button"
            class="consent-btn consent-btn-secondary"
            data-action="reject-all"
            data-testid="reject-all-btn"
          >
            Reject All
          </button>
          <button
            type="button"
            class="consent-btn consent-btn-primary"
            data-action="accept-all"
            data-testid="accept-all-btn"
          >
            Accept All
          </button>
          <button
            type="button"
            class="consent-btn consent-btn-tertiary"
            data-action="customize"
            data-testid="customize-btn"
          >
            Customize
          </button>
        </div>
      )}

      <!-- Full Actions (Standard Mode) -->
      {!compactMode && (
        <div class="consent-actions">
          <div class="consent-actions-primary">
            <button
              type="button"
              class="consent-btn consent-btn-primary"
              data-action="accept-all"
              data-testid="accept-all-btn"
            >
              Accept All Cookies
            </button>
            <button
              type="button"
              class="consent-btn consent-btn-secondary"
              data-action="reject-all"
              data-testid="reject-all-btn"
            >
              Reject Non-Essential
            </button>
          </div>
          <div class="consent-actions-secondary">
            <button
              type="button"
              class="consent-btn consent-btn-tertiary"
              data-action="customize"
              data-testid="customize-btn"
            >
              Customize Preferences
            </button>
            <a
              href="/privacy-policy"
              class="consent-link"
              target="_blank"
              rel="noopener noreferrer"
            >
              Privacy Policy
            </a>
          </div>
        </div>
      )}
    </div>
  </div>

  <!-- Granular Consent Settings Modal -->
  {enableGranularControls && (
    <div
      id={settingsId}
      class="consent-settings-modal"
      data-testid="consent-settings-modal"
      role="dialog"
      aria-labelledby="settings-title"
      aria-modal="true"
      hidden
    >
      <div class="consent-settings-backdrop" data-action="close-settings"></div>
      <div class="consent-settings-content">
        <!-- Settings Header -->
        <div class="consent-settings-header">
          <h2 id="settings-title" class="consent-settings-title">Privacy Preferences</h2>
          <button
            type="button"
            class="consent-close-btn"
            data-action="close-settings"
            aria-label="Close privacy preferences"
          >
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </button>
        </div>

        <!-- Settings Form -->
        <form class="consent-settings-form" data-testid="consent-form">
          <!-- Essential Cookies -->
          <div class="consent-category">
            <div class="consent-category-header">
              <div class="consent-category-info">
                <h3 class="consent-category-title">Essential Cookies</h3>
                <p class="consent-category-description">
                  Required for the website to function properly. These cannot be disabled.
                </p>
              </div>
              <div class="consent-toggle">
                <input
                  type="checkbox"
                  id="consent-essential"
                  name="essential"
                  checked
                  disabled
                  aria-describedby="essential-description"
                />
                <label for="consent-essential" class="consent-toggle-label">
                  <span class="consent-toggle-slider"></span>
                  <span class="sr-only">Essential cookies (always enabled)</span>
                </label>
              </div>
            </div>
            <div id="essential-description" class="consent-category-details">
              <p>These cookies are necessary for the website to function and cannot be switched off. They are usually only set in response to actions made by you which amount to a request for services.</p>
              <ul>
                <li>Session management</li>
                <li>Security features</li>
                <li>Basic site functionality</li>
              </ul>
            </div>
          </div>

          <!-- Functional Cookies -->
          <div class="consent-category">
            <div class="consent-category-header">
              <div class="consent-category-info">
                <h3 class="consent-category-title">Functional Cookies</h3>
                <p class="consent-category-description">
                  Enhance your experience with improved features and personalization.
                </p>
              </div>
              <div class="consent-toggle">
                <input
                  type="checkbox"
                  id="consent-functional"
                  name="functional"
                  data-testid="functional-toggle"
                  aria-describedby="functional-description"
                />
                <label for="consent-functional" class="consent-toggle-label">
                  <span class="consent-toggle-slider"></span>
                  <span class="sr-only">Functional cookies</span>
                </label>
              </div>
            </div>
            <div id="functional-description" class="consent-category-details">
              <p>These cookies enable enhanced functionality and personalization, such as remembering your preferences and settings.</p>
              <ul>
                <li>User preferences</li>
                <li>Language settings</li>
                <li>Accessibility features</li>
              </ul>
            </div>
          </div>

          <!-- Analytics Cookies -->
          <div class="consent-category">
            <div class="consent-category-header">
              <div class="consent-category-info">
                <h3 class="consent-category-title">Analytics Cookies</h3>
                <p class="consent-category-description">
                  Help us understand how visitors use our website to improve performance.
                </p>
              </div>
              <div class="consent-toggle">
                <input
                  type="checkbox"
                  id="consent-analytics"
                  name="analytics"
                  data-testid="analytics-toggle"
                  aria-describedby="analytics-description"
                />
                <label for="consent-analytics" class="consent-toggle-label">
                  <span class="consent-toggle-slider"></span>
                  <span class="sr-only">Analytics cookies</span>
                </label>
              </div>
            </div>
            <div id="analytics-description" class="consent-category-details">
              <p>These cookies help us understand how visitors interact with our website by collecting anonymous information.</p>
              <ul>
                <li>Page views and navigation</li>
                <li>Performance monitoring</li>
                <li>Error tracking</li>
                <li>Usage analytics (anonymized)</li>
              </ul>
            </div>
          </div>

          <!-- Performance Cookies -->
          <div class="consent-category">
            <div class="consent-category-header">
              <div class="consent-category-info">
                <h3 class="consent-category-title">Performance Cookies</h3>
                <p class="consent-category-description">
                  Monitor website performance and optimize user experience.
                </p>
              </div>
              <div class="consent-toggle">
                <input
                  type="checkbox"
                  id="consent-performance"
                  name="performance"
                  data-testid="performance-toggle"
                  aria-describedby="performance-description"
                />
                <label for="consent-performance" class="consent-toggle-label">
                  <span class="consent-toggle-slider"></span>
                  <span class="sr-only">Performance cookies</span>
                </label>
              </div>
            </div>
            <div id="performance-description" class="consent-category-details">
              <p>These cookies allow us to monitor website performance and identify areas for improvement.</p>
              <ul>
                <li>Core Web Vitals tracking</li>
                <li>Load time monitoring</li>
                <li>Resource optimization</li>
              </ul>
            </div>
          </div>

          <!-- Marketing Cookies -->
          <div class="consent-category">
            <div class="consent-category-header">
              <div class="consent-category-info">
                <h3 class="consent-category-title">Marketing Cookies</h3>
                <p class="consent-category-description">
                  Personalize content and measure advertising effectiveness.
                </p>
              </div>
              <div class="consent-toggle">
                <input
                  type="checkbox"
                  id="consent-marketing"
                  name="marketing"
                  data-testid="marketing-toggle"
                  aria-describedby="marketing-description"
                />
                <label for="consent-marketing" class="consent-toggle-label">
                  <span class="consent-toggle-slider"></span>
                  <span class="sr-only">Marketing cookies</span>
                </label>
              </div>
            </div>
            <div id="marketing-description" class="consent-category-details">
              <p>These cookies are used to deliver personalized advertisements and measure their effectiveness.</p>
              <ul>
                <li>Personalized content</li>
                <li>Marketing analytics</li>
                <li>Social media integration</li>
              </ul>
            </div>
          </div>

          <!-- Settings Actions -->
          <div class="consent-settings-actions">
            <button
              type="button"
              class="consent-btn consent-btn-secondary"
              data-action="reset-settings"
              data-testid="reset-settings-btn"
            >
              Reset to Defaults
            </button>
            <div class="consent-settings-actions-primary">
              <button
                type="button"
                class="consent-btn consent-btn-tertiary"
                data-action="close-settings"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="consent-btn consent-btn-primary"
                data-action="save-settings"
                data-testid="save-settings-btn"
              >
                Save Preferences
              </button>
            </div>
          </div>
        </form>

        <!-- Additional Information -->
        <div class="consent-settings-footer">
          <p class="consent-footer-text">
            You can change these settings at any time by clicking the "Cookie Preferences" link in our footer.
          </p>
          <div class="consent-footer-links">
            <a href="/privacy-policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>
            <a href="/cookie-policy" target="_blank" rel="noopener noreferrer">Cookie Policy</a>
            <a href="/contact" target="_blank" rel="noopener noreferrer">Contact Us</a>
          </div>
        </div>
      </div>
    </div>
  )}

  <!-- Consent Status Indicator (for logged-in state) -->
  <div
    class="consent-status-indicator"
    data-testid="consent-status"
    hidden
  >
    <button
      type="button"
      class="consent-status-btn"
      data-action="open-settings"
      aria-label="Open privacy preferences"
      title="Privacy Preferences"
    >
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="3"></circle>
        <path d="M12 1v6m0 6v6"></path>
        <path d="m15.14 7.14-4.28 4.28m0-4.28 4.28 4.28"></path>
        <path d="M21 12h-6m-6 0H3"></path>
      </svg>
    </button>
  </div>
</div>

<!-- Styles for Consent Manager -->
<style>
  /* Consent Manager Base Styles */
  .consent-manager {
    --consent-primary: #00ffff;
    --consent-primary-hover: #00e6e6;
    --consent-secondary: #64748b;
    --consent-background: #1a1a2e;
    --consent-surface: #16213e;
    --consent-border: #0f172a;
    --consent-text: #f1f5f9;
    --consent-text-muted: #cbd5e1;
    --consent-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    --consent-radius: 12px;
    --consent-transition: all 0.2s ease-in-out;
  }

  /* Light theme */
  .consent-manager[data-theme="light"] {
    --consent-primary: #0ea5e9;
    --consent-primary-hover: #0284c7;
    --consent-background: #ffffff;
    --consent-surface: #f8fafc;
    --consent-border: #e2e8f0;
    --consent-text: #1e293b;
    --consent-text-muted: #64748b;
  }

  /* Auto theme - defaults to dark, can be overridden by system preference */
  @media (prefers-color-scheme: light) {
    .consent-manager[data-theme="auto"] {
      --consent-primary: #0ea5e9;
      --consent-primary-hover: #0284c7;
      --consent-background: #ffffff;
      --consent-surface: #f8fafc;
      --consent-border: #e2e8f0;
      --consent-text: #1e293b;
      --consent-text-muted: #64748b;
    }
  }

  /* Consent Banner Styles */
  .consent-banner {
    position: fixed;
    left: 0;
    right: 0;
    background: var(--consent-background);
    border: 1px solid var(--consent-border);
    box-shadow: var(--consent-shadow);
    backdrop-filter: blur(12px);
    z-index: 1000;
    animation: slideIn 0.3s ease-out;
  }

  .consent-manager[data-position="bottom"] .consent-banner {
    bottom: 0;
    border-top-left-radius: var(--consent-radius);
    border-top-right-radius: var(--consent-radius);
    border-bottom: none;
  }

  .consent-manager[data-position="top"] .consent-banner {
    top: 0;
    border-bottom-left-radius: var(--consent-radius);
    border-bottom-right-radius: var(--consent-radius);
    border-top: none;
  }

  .consent-banner-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .consent-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .consent-icon {
    color: var(--consent-primary);
    flex-shrink: 0;
  }

  .consent-title {
    color: var(--consent-text);
    font-size: 1.125rem;
    font-weight: 600;
    margin: 0;
  }

  .consent-description {
    color: var(--consent-text-muted);
    line-height: 1.6;
  }

  .consent-description p {
    margin: 0 0 0.5rem 0;
  }

  .consent-description p:last-child {
    margin-bottom: 0;
  }

  /* Action Buttons */
  .consent-actions,
  .consent-quick-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    align-items: center;
  }

  .consent-actions {
    flex-direction: column;
    align-items: stretch;
  }

  .consent-actions-primary,
  .consent-actions-secondary {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .consent-quick-actions {
    justify-content: flex-end;
  }

  /* Button Styles */
  .consent-btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-weight: 500;
    font-size: 0.875rem;
    cursor: pointer;
    transition: var(--consent-transition);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: 44px; /* Accessibility: touch target */
  }

  .consent-btn-primary {
    background: var(--consent-primary);
    color: var(--consent-background);
  }

  .consent-btn-primary:hover,
  .consent-btn-primary:focus {
    background: var(--consent-primary-hover);
    transform: translateY(-1px);
  }

  .consent-btn-secondary {
    background: var(--consent-secondary);
    color: var(--consent-text);
  }

  .consent-btn-secondary:hover,
  .consent-btn-secondary:focus {
    background: #475569;
    transform: translateY(-1px);
  }

  .consent-btn-tertiary {
    background: transparent;
    color: var(--consent-text-muted);
    border: 1px solid var(--consent-border);
  }

  .consent-btn-tertiary:hover,
  .consent-btn-tertiary:focus {
    background: var(--consent-surface);
    color: var(--consent-text);
  }

  .consent-link {
    color: var(--consent-primary);
    text-decoration: underline;
    font-size: 0.875rem;
    padding: 0.5rem 0;
  }

  .consent-link:hover {
    color: var(--consent-primary-hover);
  }

  /* Settings Modal Styles */
  .consent-settings-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1100;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: fadeIn 0.2s ease-out;
  }

  .consent-settings-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.75);
    backdrop-filter: blur(4px);
  }

  .consent-settings-content {
    position: relative;
    background: var(--consent-background);
    border: 1px solid var(--consent-border);
    border-radius: var(--consent-radius);
    box-shadow: var(--consent-shadow);
    max-width: 600px;
    max-height: 90vh;
    overflow-y: auto;
    margin: 1rem;
    width: 100%;
  }

  .consent-settings-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem;
    border-bottom: 1px solid var(--consent-border);
  }

  .consent-settings-title {
    color: var(--consent-text);
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
  }

  .consent-close-btn {
    background: none;
    border: none;
    color: var(--consent-text-muted);
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 4px;
    transition: var(--consent-transition);
  }

  .consent-close-btn:hover {
    background: var(--consent-surface);
    color: var(--consent-text);
  }

  /* Form Styles */
  .consent-settings-form {
    padding: 1.5rem;
  }

  .consent-category {
    margin-bottom: 2rem;
  }

  .consent-category:last-child {
    margin-bottom: 0;
  }

  .consent-category-header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: 1rem;
    margin-bottom: 0.75rem;
  }

  .consent-category-info {
    flex: 1;
  }

  .consent-category-title {
    color: var(--consent-text);
    font-size: 1rem;
    font-weight: 600;
    margin: 0 0 0.25rem 0;
  }

  .consent-category-description {
    color: var(--consent-text-muted);
    font-size: 0.875rem;
    margin: 0;
    line-height: 1.5;
  }

  .consent-category-details {
    color: var(--consent-text-muted);
    font-size: 0.875rem;
    line-height: 1.5;
    padding-left: 1rem;
    border-left: 2px solid var(--consent-border);
  }

  .consent-category-details p {
    margin: 0 0 0.5rem 0;
  }

  .consent-category-details ul {
    margin: 0.5rem 0 0 0;
    padding-left: 1.25rem;
  }

  .consent-category-details li {
    margin-bottom: 0.25rem;
  }

  /* Toggle Switch Styles */
  .consent-toggle {
    flex-shrink: 0;
  }

  .consent-toggle input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  .consent-toggle-label {
    display: block;
    width: 48px;
    height: 24px;
    background: var(--consent-secondary);
    border-radius: 12px;
    position: relative;
    cursor: pointer;
    transition: var(--consent-transition);
  }

  .consent-toggle-slider {
    display: block;
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    position: absolute;
    top: 2px;
    left: 2px;
    transition: var(--consent-transition);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .consent-toggle input:checked + .consent-toggle-label {
    background: var(--consent-primary);
  }

  .consent-toggle input:checked + .consent-toggle-label .consent-toggle-slider {
    transform: translateX(24px);
  }

  .consent-toggle input:disabled + .consent-toggle-label {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .consent-toggle input:focus + .consent-toggle-label {
    outline: 2px solid var(--consent-primary);
    outline-offset: 2px;
  }

  /* Settings Actions */
  .consent-settings-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 2rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--consent-border);
  }

  .consent-settings-actions-primary {
    display: flex;
    gap: 0.75rem;
  }

  /* Footer */
  .consent-settings-footer {
    padding: 1.5rem;
    border-top: 1px solid var(--consent-border);
    background: var(--consent-surface);
  }

  .consent-footer-text {
    color: var(--consent-text-muted);
    font-size: 0.875rem;
    margin: 0 0 1rem 0;
    line-height: 1.5;
  }

  .consent-footer-links {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .consent-footer-links a {
    color: var(--consent-primary);
    text-decoration: none;
    font-size: 0.875rem;
  }

  .consent-footer-links a:hover {
    text-decoration: underline;
  }

  /* Status Indicator */
  .consent-status-indicator {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 999;
  }

  .consent-status-btn {
    background: var(--consent-primary);
    color: var(--consent-background);
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    cursor: pointer;
    box-shadow: var(--consent-shadow);
    transition: var(--consent-transition);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .consent-status-btn:hover {
    background: var(--consent-primary-hover);
    transform: scale(1.05);
  }

  /* Animations */
  @keyframes slideIn {
    from {
      transform: translateY(100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .consent-banner-content {
      padding: 1rem;
    }

    .consent-settings-content {
      margin: 0.5rem;
      max-height: 95vh;
    }

    .consent-settings-header,
    .consent-settings-form,
    .consent-settings-footer {
      padding: 1rem;
    }

    .consent-actions {
      gap: 0.5rem;
    }

    .consent-actions-primary,
    .consent-actions-secondary {
      flex-direction: column;
      width: 100%;
    }

    .consent-btn {
      width: 100%;
      min-height: 48px;
    }

    .consent-quick-actions {
      justify-content: center;
    }

    .consent-category-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
    }

    .consent-settings-actions {
      flex-direction: column;
      gap: 1rem;
      align-items: stretch;
    }

    .consent-settings-actions-primary {
      flex-direction: column;
      width: 100%;
    }

    .consent-footer-links {
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  /* Screen Reader Only */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Hidden state */
  [hidden] {
    display: none !important;
  }

  /* Focus management */
  .consent-manager :focus {
    outline: 2px solid var(--consent-primary);
    outline-offset: 2px;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .consent-manager {
      --consent-border: currentColor;
    }

    .consent-btn {
      border: 1px solid currentColor;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .consent-manager * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>

<!-- Client-side JavaScript for Consent Management -->
<script>
  // Import consent management functions
  import {
    initializeConsent,
    updateConsent,
    getCurrentConsent,
    shouldShowConsentBanner,
    markConsentBannerShown,
    respectDoNotTrack,
    onConsentChange
  } from '../../lib/analytics/consent.js';

  class ConsentManager {
    private manager: HTMLElement;
    private banner: HTMLElement;
    private settings: HTMLElement;
    private form: HTMLFormElement;

    constructor() {
      this.manager = document.querySelector('[data-testid="consent-manager"]') as HTMLElement;
      this.banner = document.querySelector('[data-testid="consent-banner"]') as HTMLElement;
      this.settings = document.querySelector('[data-testid="consent-settings-modal"]') as HTMLElement;
      this.form = document.querySelector('[data-testid="consent-form"]') as HTMLFormElement;

      this.init();
    }

    private init() {
      // Initialize consent system
      initializeConsent();

      // Show banner if needed
      if (shouldShowConsentBanner() && !respectDoNotTrack()) {
        this.showBanner();
      }

      // Set up event listeners
      this.setupEventListeners();

      // Listen for consent changes
      onConsentChange((consent) => {
        this.updateUI(consent);
      });

      // Load current consent state
      const currentConsent = getCurrentConsent();
      this.updateUI(currentConsent);
    }

    private setupEventListeners() {
      // Banner actions
      document.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        const action = target.getAttribute('data-action');

        switch (action) {
          case 'accept-all':
            this.handleAcceptAll();
            break;
          case 'reject-all':
            this.handleRejectAll();
            break;
          case 'customize':
            this.showSettings();
            break;
          case 'close-settings':
            this.hideSettings();
            break;
          case 'open-settings':
            this.showSettings();
            break;
          case 'save-settings':
            this.handleSaveSettings();
            break;
          case 'reset-settings':
            this.handleResetSettings();
            break;
        }
      });

      // Form submission
      if (this.form) {
        this.form.addEventListener('submit', (e) => {
          e.preventDefault();
          this.handleSaveSettings();
        });
      }

      // Keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          if (!this.settings.hidden) {
            this.hideSettings();
          }
        }
      });
    }

    private showBanner() {
      this.banner.hidden = false;
      this.banner.setAttribute('aria-modal', 'true');

      // Focus management
      const firstButton = this.banner.querySelector('button') as HTMLElement;
      if (firstButton) {
        firstButton.focus();
      }
    }

    private hideBanner() {
      this.banner.hidden = true;
      this.banner.setAttribute('aria-modal', 'false');
      markConsentBannerShown();
    }

    private showSettings() {
      this.settings.hidden = false;
      document.body.style.overflow = 'hidden';

      // Focus management
      const title = this.settings.querySelector('#settings-title') as HTMLElement;
      if (title) {
        title.focus();
      }

      // Load current settings into form
      this.loadConsentIntoForm();
    }

    private hideSettings() {
      this.settings.hidden = true;
      document.body.style.overflow = '';
    }

    private handleAcceptAll() {
      updateConsent('full', undefined, 'banner_accept');
      this.hideBanner();
    }

    private handleRejectAll() {
      updateConsent('essential', undefined, 'banner_reject');
      this.hideBanner();
    }

    private handleSaveSettings() {
      const formData = new FormData(this.form);

      const granularConsent = {
        essential: true, // Always true
        functional: formData.has('functional'),
        analytics: formData.has('analytics'),
        performance: formData.has('performance'),
        marketing: formData.has('marketing'),
        personalization: formData.has('marketing'), // Tied to marketing
        thirdParty: formData.has('marketing') // Tied to marketing
      };

      // Determine overall consent level
      let level = 'essential';
      if (granularConsent.marketing) {
        level = 'marketing';
      } else if (granularConsent.analytics) {
        level = 'analytics';
      } else if (granularConsent.functional) {
        level = 'functional';
      }

      updateConsent(level as any, granularConsent, 'settings_update');
      this.hideSettings();
      this.hideBanner();
    }

    private handleResetSettings() {
      // Reset form to essential only
      const checkboxes = this.form.querySelectorAll('input[type="checkbox"]:not([disabled])');
      checkboxes.forEach((checkbox: HTMLInputElement) => {
        checkbox.checked = false;
      });
    }

    private loadConsentIntoForm() {
      const consent = getCurrentConsent();

      // Set form values based on current consent
      const functionalCheckbox = this.form.querySelector('[name="functional"]') as HTMLInputElement;
      const analyticsCheckbox = this.form.querySelector('[name="analytics"]') as HTMLInputElement;
      const performanceCheckbox = this.form.querySelector('[name="performance"]') as HTMLInputElement;
      const marketingCheckbox = this.form.querySelector('[name="marketing"]') as HTMLInputElement;

      if (functionalCheckbox) functionalCheckbox.checked = consent.granularConsent.functional;
      if (analyticsCheckbox) analyticsCheckbox.checked = consent.granularConsent.analytics;
      if (performanceCheckbox) performanceCheckbox.checked = consent.granularConsent.performance;
      if (marketingCheckbox) marketingCheckbox.checked = consent.granularConsent.marketing;
    }

    private updateUI(consent: any) {
      // Update status indicator
      const statusIndicator = document.querySelector('[data-testid="consent-status"]') as HTMLElement;
      if (statusIndicator) {
        statusIndicator.hidden = false;
      }

      // Could add more UI updates here based on consent state
      console.log('Consent updated:', consent.level, consent.granularConsent);
    }
  }

  // Initialize consent manager when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new ConsentManager();
    });
  } else {
    new ConsentManager();
  }
</script>